// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "AutonomousTurn.h"
#define ANGLE_ERROR 1
#define TURN_SPEED .5

AutonomousTurn::AutonomousTurn(float angle) {
	// Use requires() here to declare subsystem dependencies
	// eg. requires(chassis);
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	Requires(Robot::driveTrain);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	 m_angle = angle;
	 goal = 0;
	 gyro = 0;

}

// Called just before this Command runs the first time
void AutonomousTurn::Initialize() {
	gyro = RobotMap::driveTrainGyro->GetAngleZ();
	gyro %= 360;
	goal = gyro + m_angle;
}

// Called repeatedly when this Command is scheduled to run
void AutonomousTurn::Execute() {
	
	if (m_angle > 0)
		Robot::driveTrain->robotDrive41->MecanumDrive_Cartesian(0.0, 0.0, TURN_SPEED, gyro);
	else if (m_angle < 0)
		Robot::driveTrain->robotDrive41->MecanumDrive_Cartesian(0.0, 0.0, -TURN_SPEED, gyro);

}

// Make this return true when this Command no longer needs to run execute()
bool AutonomousTurn::IsFinished() {
	float currentAngle = RobotMap::driveTrainGyro->GetAngleZ();
	if ((currentAngle > goal - ANGLE_ERROR) && (currentAngle < goal + ANGLE_ERROR))
	return true;

	return false;
}

// Called once after isFinished returns true
void AutonomousTurn::End() {
	
}

// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void AutonomousTurn::Interrupted() {

}
