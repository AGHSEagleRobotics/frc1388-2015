// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.



#include "../Robot.h"
#include "Grabbers.h"
#include "../RobotMap.h"
#include "../OI.h"
#include "../Commands/MoveGrabbers.h"

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

Grabbers::Grabbers() : Subsystem("Grabbers") {
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	grabberoutsidelimit = RobotMap::grabbersGrabberoutsidelimit;
	grabberinsidelimit = RobotMap::grabbersGrabberinsidelimit;
	grabbertotelimit = RobotMap::grabbersGrabbertotelimit;
	grabberencoder = RobotMap::grabbersGrabberencoder;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
}
    
void Grabbers::InitDefaultCommand() {
	// Set the default command for a subsystem here.
	//SetDefaultCommand(new MySpecialCommand());
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
	SetDefaultCommand(new MoveGrabbers());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
}


// Put methods for controlling this subsystem
// here. Call these from Commands.
void Grabbers::ResetEncoder(){
	if(RobotMap::grabbersGrabberCANTalon->IsFwdLimitSwitchClosed() == false)//TODO:check if this is the right limit swtich
			{
				RobotMap::grabbersGrabberCANTalon->Set(INFINITE_ERROR);//TODO: check if "INFINITE_ERROR" is correct sign
			}
	else if(RobotMap::grabbersGrabberCANTalon->IsFwdLimitSwitchClosed() == true)//TODO:check if this is the right limit swtich
			{
				RobotMap::grabbersGrabberCANTalon->SetPosition(0);
			}
}
